// <auto-generated />
using System;
using EntityFrameworkTest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFrameworkTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220524080825_student-book")]
    partial class studentbook
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFrameworkTest.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Name = "Alfredo ",
                            SurName = "Covelli"
                        },
                        new
                        {
                            AuthorId = 2,
                            Name = "Ramachandra ",
                            SurName = "Guha"
                        },
                        new
                        {
                            AuthorId = 3,
                            Name = "Waman Subha ",
                            SurName = "Prabhu"
                        },
                        new
                        {
                            AuthorId = 4,
                            Name = "Dalai ",
                            SurName = "Lama"
                        });
                });

            modelBuilder.Entity("EntityFrameworkTest.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Published")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("BookId");

                    b.HasIndex("StudentId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Published = new DateTime(1988, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 1,
                            Title = "Vahana Masterclass"
                        },
                        new
                        {
                            BookId = 2,
                            Published = new DateTime(2000, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 1,
                            Title = "Right Under Our Nose"
                        },
                        new
                        {
                            BookId = 3,
                            Published = new DateTime(1986, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 2,
                            Title = "The Commonwealth of Cricket"
                        },
                        new
                        {
                            BookId = 4,
                            Published = new DateTime(2005, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 3,
                            Title = "The Little Book of Encouragement"
                        });
                });

            modelBuilder.Entity("EntityFrameworkTest.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            FirstName = "Florian",
                            LastName = "Esprit"
                        },
                        new
                        {
                            StudentId = 2,
                            FirstName = "Sagar",
                            LastName = "Bhanadari"
                        },
                        new
                        {
                            StudentId = 3,
                            FirstName = "Olga",
                            LastName = "Kharchuk"
                        },
                        new
                        {
                            StudentId = 4,
                            FirstName = "Akin",
                            LastName = "Baroti"
                        });
                });

            modelBuilder.Entity("EntityFrameworkTest.Models.Book", b =>
                {
                    b.HasOne("EntityFrameworkTest.Models.Student", "Student")
                        .WithMany("Books")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
